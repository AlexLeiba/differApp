// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginScreen /> should match snapshot 1`] = `
<RNCSafeAreaView>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "height": 1334,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "space-between",
          "padding": 18,
        }
      }
    >
      <View>
        <Text
          style={
            Object {
              "color": "#020202",
              "fontSize": 14,
              "textAlign": "center",
            }
          }
        >
          Enter your phone number, incl. country code.
        </Text>
        <Text
          onPress={[Function]}
          style={
            Object {
              "color": "#332df1",
              "fontSize": 14,
              "textAlign": "center",
            }
          }
        >
          FAQ
        </Text>
        <View
          height={20}
          style={
            Array [
              Object {
                "height": 20,
                "width": "100%",
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "flexDirection": "row",
                "width": 600,
              },
              Object {},
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#cacaca",
                "borderRadius": 10,
                "borderWidth": 1,
                "width": "100%",
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": "100%",
                "justifyContent": "center",
                "minWidth": 32,
                "opacity": 1,
                "paddingBottom": 6,
                "paddingLeft": 0,
                "paddingTop": 6,
                "width": 52,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginRight": 10,
                  "width": 30,
                }
              }
            >
              <ActivityIndicator
                animating={true}
                color="#999999"
                hidesWhenStopped={true}
                size="small"
              />
            </View>
            <Modal
              animated={true}
              animationType="slide"
              hardwareAccelerated={false}
              onDismiss={[Function]}
              onRequestClose={[Function]}
              visible={false}
            >
              <RCTSafeAreaView
                emulateUnlessSupported={true}
                style={
                  Array [
                    Object {
                      "flex": 1,
                    },
                    Object {
                      "backgroundColor": "#000",
                    },
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "height": 48,
                          "justifyContent": "center",
                          "width": "15%",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Image
                        source={1}
                        style={
                          Array [
                            Object {
                              "height": 25,
                              "resizeMode": "contain",
                              "width": 25,
                            },
                            undefined,
                            Object {
                              "tintColor": "#fff",
                            },
                          ]
                        }
                      />
                    </View>
                  </View>
                  <TextInput
                    allowFontScaling={true}
                    autoCorrect={false}
                    autoFocus={false}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onClose={[Function]}
                    onFocus={[Function]}
                    placeholder="Enter country name"
                    placeholderTextColor="#aaa"
                    rejectResponderTermination={true}
                    renderFilter={[Function]}
                    style={
                      Array [
                        Object {
                          "height": 48,
                          "width": "70%",
                        },
                        Object {
                          "color": "#fff",
                          "fontFamily": "System",
                          "fontSize": 16,
                        },
                      ]
                    }
                    testID="text-input-country-filter"
                    underlineColorAndroid="transparent"
                    value=""
                    withCloseButton={true}
                    withFilter={true}
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                      },
                      Object {
                        "backgroundColor": "#000",
                      },
                    ]
                  }
                >
                  <RCTScrollView
                    ItemSeparatorComponent={[Function]}
                    automaticallyAdjustContentInsets={false}
                    data={Array []}
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    getItemLayout={[Function]}
                    horizontal={false}
                    initialNumToRender={14}
                    keyExtractor={[Function]}
                    keyboardShouldPersistTaps="handled"
                    maxToRenderPerBatch={10}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    onScrollToIndexFailed={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEventThrottle={1}
                    stickyHeaderIndices={Array []}
                    testID="list-countries"
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View />
                  </RCTScrollView>
                </View>
              </RCTSafeAreaView>
            </Modal>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F8F9F9",
                  "flex": 1,
                  "flexDirection": "row",
                  "paddingHorizontal": 30,
                  "paddingVertical": 27,
                  "textAlign": "left",
                },
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 10,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingTop": 0,
                },
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              autoFocus={true}
              editable={true}
              keyboardAppearance="dark"
              keyboardType="number-pad"
              onChangeText={[Function]}
              placeholder="Phone Number"
              rejectResponderTermination={true}
              selectionColor="black"
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "flex": 1,
                    "fontSize": 16,
                  },
                  Object {},
                ]
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          height={30}
          style={
            Array [
              Object {
                "height": 30,
                "width": "100%",
              },
            ]
          }
        />
        <Text
          style={
            Object {
              "color": "#020202",
              "fontSize": 14,
              "textAlign": "center",
            }
          }
        >
          By signing up
        </Text>
        <Text
          style={
            Object {
              "color": "#020202",
              "fontSize": 14,
              "textAlign": "center",
            }
          }
        >
          you agree to the
           
          <Text
            onPress={[Function]}
            style={
              Object {
                "color": "#332df1",
                "fontSize": 14,
                "textAlign": "center",
              }
            }
          >
            Terms of service
          </Text>
        </Text>
        <Text
          onPress={[Function]}
          style={
            Object {
              "color": "#332df1",
              "fontSize": 14,
              "textAlign": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#020202",
                "fontSize": 14,
                "textAlign": "center",
              }
            }
          >
            &
          </Text>
           Privacy policy
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "flex": 1,
          "justifyContent": "center",
          "marginBottom": 5,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#38ae6f",
            "borderRadius": 5,
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "width": 340,
          }
        }
        testID="login-button"
      >
        <Text
          colorTitle="#e6e6e6"
          fontSize={16}
          style={
            Array [
              Object {
                "color": "#e6e6e6",
                "fontSize": 16,
                "textAlign": "center",
              },
            ]
          }
          testID="login-text"
          textAlign="center"
        >
          Continue
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`<WelcomeScreen>  1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    PlatformOs="ios"
    platformAndroidAndIos={true}
    style={
      Array [
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "height": "100%",
          "justifyContent": "center",
          "marginTop": 10,
          "width": "100%",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "marginBottom": 100,
            "marginLeft": 35,
            "marginRight": 35,
            "width": 300,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 24,
              "fontWeight": "400",
              "lineHeight": 30,
              "textAlign": "center",
            },
          ]
        }
        textAlign={true}
      >
        Differ makes it easier to get to know students, like yourself
      </Text>
    </View>
    <Image
      source={1}
    />
    <View
      height="50px"
      style={
        Array [
          Object {
            "height": 50,
            "width": "100%",
          },
        ]
      }
    />
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#38ae6f",
          "borderRadius": 5,
          "opacity": 1,
          "paddingBottom": 15,
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 15,
          "width": 300,
        }
      }
      testID="started-button"
    >
      <Text
        colorTitle="#e6e6e6"
        style={
          Array [
            Object {
              "color": "#e6e6e6",
              "fontSize": 20,
              "textAlign": "center",
            },
          ]
        }
        testID="started-text"
        textAlign="center"
      >
        Get started
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
